{
  "Uuid": "c7b1d8ca-bc1f-4755-9632-bcaaad615794",
  "IsCustomNode": true,
  "Category": "Clockwork.List.Organize.Actions",
  "Description": "Sorts a list of lists by one of its sublists",
  "Name": "List.SortListOfLists",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nlists = IN[0]\r\nsortindex = int(IN[1])\r\ncaseinsensitive = IN[2]\r\nsortdescending = IN[3]\r\n\r\n# make sure that case-insensitive is turned of if it is not strings we're sorting\r\nif caseinsensitive == True and isinstance(lists[0][sortindex], basestring) == False:\r\n\tcaseinsensitive = False\r\nif caseinsensitive == True:\r\n\tif sortdescending == True:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex].lower(), reverse=True)\r\n\telse:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex].lower())\r\nelse:\r\n\tif sortdescending == True:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex], reverse=True)\r\n\telse:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex])",
      "VariableInputPorts": true,
      "Id": "57bb5c7c2f81471da591ea67161da6a8",
      "Inputs": [
        {
          "Id": "01eba04e9861454cab61e3cf6a871e4e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6732eb3da02f4924a1eebebd4c848658",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641c0ea2557a45769656a51d506fad0e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49c78331a6fd46f2b7c41bc2de48daa3",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19e0f10fb91842f5a5cebd0a422f592c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "seq",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "ba099a6115514ccbb1d479d3ed231976",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "50a6c3f467fb4dacb0070a5949c7882f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "seq",
      "Id": "0c31c9a4b8a744e69a4ea1bed464f373",
      "Inputs": [
        {
          "Id": "d31f7ef46cb94dd8a8d31c19de9ae798",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sortIndex",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "0",
        "Description": ""
      },
      "Id": "f7fa4e35f6ba4801b01fd209929c2d08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7ab0b25612c4231b16c379a51f39c6c",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "caseInsensitive",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "857474aae51d49009c2cd8f0df3b05e7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a0940a47e294e75af6baaaeafc0d9e9",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "orderDescending",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "90fc23e171ce42e5891d12a2f0254273",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29ee9f5ca9994ceb8912345458248e50",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "784a13b3a5b44befbec0abd59a9809bd",
      "Inputs": [
        {
          "Id": "24a18703277b4cb2849a48fc188e0973",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9517da6ac59040fca7ce88855a06862e",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "744a4618c4074752b3fcc199d06f374e",
      "Inputs": [
        {
          "Id": "9525b248336a4ada9898424a7a071ee3",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c46a6e6344f1484bb0e3f14798584428",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "19e0f10fb91842f5a5cebd0a422f592c",
      "End": "9525b248336a4ada9898424a7a071ee3",
      "Id": "800db1072f3e4cecb43a98f8c8949e9e"
    },
    {
      "Start": "50a6c3f467fb4dacb0070a5949c7882f",
      "End": "24a18703277b4cb2849a48fc188e0973",
      "Id": "613c950be2f647a39379d7f8c56d0dc8"
    },
    {
      "Start": "f7ab0b25612c4231b16c379a51f39c6c",
      "End": "6732eb3da02f4924a1eebebd4c848658",
      "Id": "0e3b9867fbd14987b3c8466d7153b7a6"
    },
    {
      "Start": "7a0940a47e294e75af6baaaeafc0d9e9",
      "End": "641c0ea2557a45769656a51d506fad0e",
      "Id": "d7746bb9f9574b8491ad5fe295303f82"
    },
    {
      "Start": "29ee9f5ca9994ceb8912345458248e50",
      "End": "49c78331a6fd46f2b7c41bc2de48daa3",
      "Id": "b7b797da37604f3593c8d1866b23f64e"
    },
    {
      "Start": "9517da6ac59040fca7ce88855a06862e",
      "End": "01eba04e9861454cab61e3cf6a871e4e",
      "Id": "c579b954e4fc4a8a9452f1b7b26b4cd6"
    },
    {
      "Start": "c46a6e6344f1484bb0e3f14798584428",
      "End": "d31f7ef46cb94dd8a8d31c19de9ae798",
      "Id": "fe0427507ad84fbda54136536d1e7a49"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "57bb5c7c2f81471da591ea67161da6a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 430.9375975039,
        "Y": 86.9500780031202
      },
      {
        "Id": "ba099a6115514ccbb1d479d3ed231976",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "Id": "0c31c9a4b8a744e69a4ea1bed464f373",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 835.07488299532,
        "Y": 86.9500780031202
      },
      {
        "Id": "f7fa4e35f6ba4801b01fd209929c2d08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 83.0
      },
      {
        "Id": "857474aae51d49009c2cd8f0df3b05e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 167.0
      },
      {
        "Id": "90fc23e171ce42e5891d12a2f0254273",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 250.0
      },
      {
        "Id": "784a13b3a5b44befbec0abd59a9809bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 193.815912636506,
        "Y": -0.03744149765987
      },
      {
        "Id": "744a4618c4074752b3fcc199d06f374e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 617.385335413417,
        "Y": 87.4180967238691
      }
    ],
    "Annotations": [],
    "X": 30.0,
    "Y": 240.039408866995,
    "Zoom": 1.05254515599343
  }
}