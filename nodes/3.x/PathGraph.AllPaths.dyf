{
  "Uuid": "d999fe4a-b7e7-4c74-8184-19f824d6b487",
  "IsCustomNode": true,
  "Category": "Clockwork.Math.Graphs.Query",
  "Description": "Finds all possible paths between two nodes.  The connections input expects a list of value pairs.",
  "Name": "PathGraph.AllPaths",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "pathgraphlist = IN[0]\r\nstart = IN[1]\r\nend = IN[2]\r\npathgraph = dict()\r\n\r\nfor item in pathgraphlist:\r\n\tpathgraph[item[0]] = item[1]\r\n\r\n# script found here:\r\n# https://www.python.org/doc/essays/graphs/\r\n\r\ndef find_all_paths(graph, start, end, path=[]):\r\n\tpath = path + [start]\r\n\tif start == end:\r\n\t\treturn [path]\r\n\tif not graph.has_key(start):\r\n\t\treturn []\r\n\tpaths = []\r\n\tfor node in graph[start]:\r\n\t\tif node not in path:\r\n\t\t\tnewpaths = find_all_paths(graph, node, end, path)\r\n\t\t\tfor newpath in newpaths:\r\n\t\t\t\tpaths.append(newpath)\r\n\treturn paths\r\n\r\nOUT = find_all_paths(pathgraph,start,end)",
      "VariableInputPorts": true,
      "Id": "da920ed9abbc416298e3760a71672a85",
      "Inputs": [
        {
          "Id": "adf2aa276eb3481286e8996b83e017ea",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12ef4041cbcc473e9af31d33ecc86756",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "178738335e2a424b91b5bc42373e42a1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6eaf7c19ab2e48bea31e197dfec21794",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "start",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "332a1e14a4614039a7a663aed8204339",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ac4fae94a124e519a0fa50efeca1b60",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "end",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "23cfa896f741416da6d2e69688917c85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e471469b71d146d1a5e9efcb3e8c8910",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "stringPairs",
        "TypeName": "string",
        "TypeRank": 2,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "b936549c250c4b629c5e70ce210f8b66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "04b4fb3fd0014939ae6378825ea0e311",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "paths",
      "Id": "0d72d3c7a7804904ae989b0dfd051fc1",
      "Inputs": [
        {
          "Id": "5fa99dbd18de485f8fa005c719972bc1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e671caea-80d8-4245-8bf3-72144e19e559",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "c497b32aadb74bdebd9a19a6a76dcc9e",
      "Inputs": [
        {
          "Id": "2b483e42c41d4b94b4bd49d543aa75f0",
          "Name": "stringPairs",
          "Description": "string[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6896ad109dc40429a532d8696cc376b",
          "Name": "pathGraph",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Builds a path graph (Python dictionary) from a list of value pairs."
    }
  ],
  "Connectors": [
    {
      "Start": "6eaf7c19ab2e48bea31e197dfec21794",
      "End": "5fa99dbd18de485f8fa005c719972bc1",
      "Id": "5a1a58e6a1ae481c95ca623aa8ae073b"
    },
    {
      "Start": "0ac4fae94a124e519a0fa50efeca1b60",
      "End": "12ef4041cbcc473e9af31d33ecc86756",
      "Id": "5b7df67605be41d2a3be044f34410831"
    },
    {
      "Start": "e471469b71d146d1a5e9efcb3e8c8910",
      "End": "178738335e2a424b91b5bc42373e42a1",
      "Id": "8b3e0c4ebf7245b98e2eb13ff8fff0c9"
    },
    {
      "Start": "04b4fb3fd0014939ae6378825ea0e311",
      "End": "2b483e42c41d4b94b4bd49d543aa75f0",
      "Id": "e15f6419410f44149349138a2bb5e073"
    },
    {
      "Start": "c6896ad109dc40429a532d8696cc376b",
      "End": "adf2aa276eb3481286e8996b83e017ea",
      "Id": "507c271b8e27450ab587c05c21d18828"
    }
  ],
  "Dependencies": [
    "e671caea-80d8-4245-8bf3-72144e19e559"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "da920ed9abbc416298e3760a71672a85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1128.36610510175,
        "Y": 420.614930763983
      },
      {
        "Id": "332a1e14a4614039a7a663aed8204339",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 898.663779383415,
        "Y": 447.719539377912
      },
      {
        "Id": "23cfa896f741416da6d2e69688917c85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 914.390326727789,
        "Y": 525.006935262526
      },
      {
        "Id": "b936549c250c4b629c5e70ce210f8b66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 576.970973625251,
        "Y": 367.547653121264
      },
      {
        "Id": "0d72d3c7a7804904ae989b0dfd051fc1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1329.05395725147,
        "Y": 420.27511792262
      },
      {
        "Id": "c497b32aadb74bdebd9a19a6a76dcc9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PathGraph.ByPairs",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 855.681330671609,
        "Y": 368.059280499843
      }
    ],
    "Annotations": [],
    "X": -411.972474511132,
    "Y": -18.6450055624579,
    "Zoom": 0.852765925581497
  }
}