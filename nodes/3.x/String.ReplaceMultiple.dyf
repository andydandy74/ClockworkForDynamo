{
  "Uuid": "c9b8b8ab-bdc8-43d8-9004-47977bc14e03",
  "IsCustomNode": true,
  "Category": "Clockwork.String.Modify.Actions",
  "Description": "Replaces multiple search terms in a given string with multiple replacements",
  "Name": "String.ReplaceMultiple",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Based on https://gist.github.com/bgusach/a967e0587d6e01e889fd1d776c5f3729\n\nimport clr\nimport re\n\ndef ReplaceMultiple(str, searchstr, replacestr, sort):\n\treplacements = dict(zip(searchstr, replacestr))\n\tif sort: substrs = sorted(replacements, key=len, reverse=True)\n\telse: substrs = searchstr\n\tregexp = re.compile('|'.join(map(re.escape, substrs)))\n\treturn regexp.sub(lambda match: replacements[match.group(0)], str)\n\t\nif isinstance(IN[1], list): searchstr = IN[1]\nelse: searchstr = [IN[1]]\nif isinstance(IN[2], list): replacestr = IN[2]\nelse: replacestr = [IN[2]]\n\nif isinstance(IN[0], list): OUT = [ReplaceMultiple(x, searchstr, replacestr, IN[3]) for x in IN[0]]\nelse: OUT = ReplaceMultiple(IN[0], searchstr, replacestr, IN[3])",
      "VariableInputPorts": true,
      "Id": "5981cb6bce3742b6a28c9d50b1bad632",
      "Inputs": [
        {
          "Id": "8392e2260f5846fb8129c05225bd4d5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acced90a588942b2aba49d9425be3fc9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec3a111e04004bbdb743b4ec08f164f5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8910d9ed2ab94e07b25fd6a2f0682fb6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6719f25963a44c068db87ace89c2c65d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "str",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "963cfa30a1914a728b4a7a2b078f2188",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9934f5c1cd7248c7adf3cb1f2d7b5025",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "searchFor",
        "TypeName": "string",
        "TypeRank": 1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "29a332d7edb145a2af102331e7ff77e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1a543d3d7274986aa6d3e7e79b86344",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "replaceWith",
        "TypeName": "string",
        "TypeRank": 1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "129116714f1d4f0d8f829d2c11a6f8fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "56461115fe4645319ac85d99b8332488",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sortSearchTermsBySize",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": " If set to true, longer search terms will be replaced first"
      },
      "Id": "633ee0dbbf9a427d80689f2970a516c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3fb0ab12f41495fae9c0f19ab2e6ae4",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "str",
      "Id": "88a803dae51744a1b89d8e42c6340b82",
      "Inputs": [
        {
          "Id": "d038498b24f943a1b8b8a7fa63f1cd8c",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "6719f25963a44c068db87ace89c2c65d",
      "End": "d038498b24f943a1b8b8a7fa63f1cd8c",
      "Id": "f28ba4a68c2b4a86b051ba85fd5e979a"
    },
    {
      "Start": "9934f5c1cd7248c7adf3cb1f2d7b5025",
      "End": "8392e2260f5846fb8129c05225bd4d5e",
      "Id": "7869bb60fddf4b70bfd0c43c1e1056e5"
    },
    {
      "Start": "d1a543d3d7274986aa6d3e7e79b86344",
      "End": "acced90a588942b2aba49d9425be3fc9",
      "Id": "f053c9e6c5a24899b910890d4b736f60"
    },
    {
      "Start": "56461115fe4645319ac85d99b8332488",
      "End": "ec3a111e04004bbdb743b4ec08f164f5",
      "Id": "db46d0e55a6544f1b5bbc9dc280cca91"
    },
    {
      "Start": "f3fb0ab12f41495fae9c0f19ab2e6ae4",
      "End": "8910d9ed2ab94e07b25fd6a2f0682fb6",
      "Id": "8102e1cde7504d01b3767e1d6e8088f8"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "5981cb6bce3742b6a28c9d50b1bad632",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 401.0,
        "Y": 187.0
      },
      {
        "Id": "963cfa30a1914a728b4a7a2b078f2188",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "Id": "29a332d7edb145a2af102331e7ff77e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 150.0
      },
      {
        "Id": "129116714f1d4f0d8f829d2c11a6f8fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 300.0
      },
      {
        "Id": "633ee0dbbf9a427d80689f2970a516c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -320.0,
        "Y": 421.0
      },
      {
        "Id": "88a803dae51744a1b89d8e42c6340b82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 600.0,
        "Y": 187.0
      }
    ],
    "Annotations": [],
    "X": 416.0,
    "Y": 103.0,
    "Zoom": 1.0
  }
}