{
  "Uuid": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
  "IsCustomNode": true,
  "Category": "Clockwork.Revit.Elements.Query",
  "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds.",
  "Name": "Element.Name+",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "Parameter": {
        "Name": "element",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "87f38510c9e94c958119d85d995c924f",
      "NodeType": "InputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d06c16cc87214d6091c7c8e933b4ee70",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "ElementResolver": null,
      "Symbol": "name",
      "Id": "8f1bdb124403406c90d67cefe95d4b2d",
      "NodeType": "OutputNode",
      "Inputs": [
        {
          "Id": "d4435d44a874460591b308734765747e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nimport System.IO\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndef GetName(item):\r\n    unwrapped = UnwrapElement(item)\r\n    try: utype = unwrapped.GetType().ToString()\r\n    except: utype = \"\"\r\n    if not unwrapped: return None\r\n    elif utype in (\"Autodesk.Revit.DB.Area\", \"Autodesk.Revit.DB.Architecture.TopographySurface\"):\r\n        try: return unwrapped.get_Parameter(BuiltInParameter.ROOM_NAME).AsString()\r\n        except: return item.Name\r\n    elif utype in (\"Autodesk.Revit.DB.BuiltInParameter\", \"Autodesk.Revit.DB.BuiltInParameterGroup\", \"Autodesk.Revit.DB.DisplayUnitType\", \"Autodesk.Revit.DB.ParameterType\", \"Autodesk.Revit.DB.UnitSymbolType\", \"Autodesk.Revit.DB.UnitType\"): \r\n        try: return LabelUtils.GetLabelFor(unwrapped)\r\n        except: return unwrapped.ToString()\r\n    elif utype in (\"Autodesk.Revit.DB.Parameter\", \"Autodesk.Revit.DB.FamilyParameter\"): return unwrapped.Definition.Name\r\n    elif utype == \"Revit.Application.Document\": \r\n        if unwrapped.FilePath: return System.IO.Path.GetFileName(unwrapped.FilePath)\r\n        else: return None\r\n    elif unwrapped.GetType().ToString() == \"Autodesk.Revit.DB.Document\": \r\n        if unwrapped.PathName: return System.IO.Path.GetFileName(unwrapped.PathName)\r\n        else: return None\r\n    elif utype == (\"Autodesk.Revit.DB.ForgeTypeId\"): \r\n        try: return LabelUtils.GetLabelForSpec(unwrapped)\r\n        except: \r\n            try: return LabelUtils.GetLabelForSymbol(unwrapped)\r\n            except: \r\n                try: return LabelUtils.GetLabelForUnit(unwrapped)\r\n                except: \r\n                    try: return LabelUtils.GetLabelForGroup(unwrapped)\r\n                    except: \r\n                        try: return LabelUtils.GetLabelForBuiltinParameter(unwrapped)\r\n                        except: \r\n                            try: return LabelUtils.GetLabelForDiscipline(unwrapped)\r\n                            except: return unwrapped.TypeId            \r\n    elif hasattr(unwrapped, \"GetName\"): return unwrapped.GetName()  \r\n    elif hasattr(item, \"Name\"): return item.Name\r\n    elif hasattr(unwrapped, \"Name\"): return unwrapped.Name     \r\n    else: return None\r\n\r\nitems = IN[0]\r\nif isinstance(IN[0], list): OUT = [GetName(x) for x in IN[0]]\r\nelse: OUT = GetName(IN[0])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe1345c4af284ad48eee6a5bbea61e11",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a107bd83a9494493b39350f2efb8c8a7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "816331c8c1164322b5a06633c1b7c08b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "d06c16cc87214d6091c7c8e933b4ee70",
      "End": "a107bd83a9494493b39350f2efb8c8a7",
      "Id": "0a79e25a7b5c4b0fa25093f4290057e7",
      "IsHidden": "False"
    },
    {
      "Start": "816331c8c1164322b5a06633c1b7c08b",
      "End": "d4435d44a874460591b308734765747e",
      "Id": "bd65b8a3d35749e68a566566e4aa71c7",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "87f38510c9e94c958119d85d995c924f",
        "Name": "Input",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 295.01596757146,
        "Y": 138.37285610201076
      },
      {
        "Id": "8f1bdb124403406c90d67cefe95d4b2d",
        "Name": "Output",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 819.81596757146,
        "Y": 138.37285610201076
      },
      {
        "Id": "fe1345c4af284ad48eee6a5bbea61e11",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 595.01596757146,
        "Y": 138.37285610201076
      }
    ],
    "Annotations": [],
    "X": -39.81003757482483,
    "Y": 105.311437901972,
    "Zoom": 1.17131835730765
  }
}