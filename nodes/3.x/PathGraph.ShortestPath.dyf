{
  "Uuid": "24d4b1c8-ad48-4f6f-939d-a6d4e0d25a0c",
  "IsCustomNode": true,
  "Category": "Clockwork.Math.Graphs.Query",
  "Description": "Finds the shortest path (fewest steps) between two nodes. The connections input expects a list of value pairs.",
  "Name": "PathGraph.ShortestPath",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "pathgraphlist = IN[0]\r\nstart = IN[1]\r\nend = IN[2]\r\npathgraph = dict()\r\n\r\nfor item in pathgraphlist:\r\n\tpathgraph[item[0]] = item[1]\r\n\r\n# script found here:\r\n# https://www.python.org/doc/essays/graphs/\r\n\r\ndef find_shortest_path(graph, start, end, path=[]):\r\n\tpath = path + [start]\r\n\tif start == end:\r\n\t\treturn path\r\n\tif not graph.has_key(start):\r\n\t\treturn None\r\n\tshortest = None\r\n\tfor node in graph[start]:\r\n\t\tif node not in path:\r\n\t\t\tnewpath = find_shortest_path(graph, node, end, path)\r\n\t\t\tif newpath:\r\n\t\t\t\tif not shortest or len(newpath) < len(shortest):\r\n\t\t\t\t\tshortest = newpath\r\n\treturn shortest\r\n\r\nOUT = find_shortest_path(pathgraph,start,end)",
      "VariableInputPorts": true,
      "Id": "da920ed9abbc416298e3760a71672a85",
      "Inputs": [
        {
          "Id": "9e7aa89bcbb041299a7025e9a54f563b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0b8c207638448b7b152dc3660c9f763",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7854941785740c69afceb50317b03c3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cabe911310442179bd7127042390653",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "start",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "332a1e14a4614039a7a663aed8204339",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca2c0e7743974c87bec3452ffe4117bd",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "end",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "23cfa896f741416da6d2e69688917c85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0310e7f87ab44c32b70cc11e8aca5c3a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "stringPairs",
        "TypeName": "string",
        "TypeRank": 2,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "b936549c250c4b629c5e70ce210f8b66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e988344f5404c229ea5f8ee1ead7ee1",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "paths",
      "Id": "0d72d3c7a7804904ae989b0dfd051fc1",
      "Inputs": [
        {
          "Id": "70a336d48a9d4b3b8a71cbc57bd2494e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e671caea-80d8-4245-8bf3-72144e19e559",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "c497b32aadb74bdebd9a19a6a76dcc9e",
      "Inputs": [
        {
          "Id": "a3411766c1964b3583acde6a68544111",
          "Name": "stringPairs",
          "Description": "string[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0c4aefadba34c519f00bc65d6192c4a",
          "Name": "pathGraph",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Builds a path graph (Python dictionary) from a list of value pairs."
    }
  ],
  "Connectors": [
    {
      "Start": "5cabe911310442179bd7127042390653",
      "End": "70a336d48a9d4b3b8a71cbc57bd2494e",
      "Id": "6a7706c8971f433c85ce19e9e3d5dee7"
    },
    {
      "Start": "ca2c0e7743974c87bec3452ffe4117bd",
      "End": "e0b8c207638448b7b152dc3660c9f763",
      "Id": "ecba4dd1702843ca950efe88017dcba1"
    },
    {
      "Start": "0310e7f87ab44c32b70cc11e8aca5c3a",
      "End": "b7854941785740c69afceb50317b03c3",
      "Id": "543c653ae2944593a09cea1aba033679"
    },
    {
      "Start": "5e988344f5404c229ea5f8ee1ead7ee1",
      "End": "a3411766c1964b3583acde6a68544111",
      "Id": "dc0234f10c9f4c1fa73ecfd656dd9834"
    },
    {
      "Start": "a0c4aefadba34c519f00bc65d6192c4a",
      "End": "9e7aa89bcbb041299a7025e9a54f563b",
      "Id": "6996e5644de34ad1a46906251c0c1a6e"
    }
  ],
  "Dependencies": [
    "e671caea-80d8-4245-8bf3-72144e19e559"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "da920ed9abbc416298e3760a71672a85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 568.0,
        "Y": 57.0
      },
      {
        "Id": "332a1e14a4614039a7a663aed8204339",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 320.092155369383,
        "Y": 86.2863670982483
      },
      {
        "Id": "23cfa896f741416da6d2e69688917c85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 337.181264280274,
        "Y": 171.258187357197
      },
      {
        "Id": "b936549c250c4b629c5e70ce210f8b66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -28.9200304645849,
        "Y": 0.0
      },
      {
        "Id": "0d72d3c7a7804904ae989b0dfd051fc1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 792.0,
        "Y": 57.0
      },
      {
        "Id": "c497b32aadb74bdebd9a19a6a76dcc9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PathGraph.ByPairs",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 275.314546839299,
        "Y": -0.182787509520182
      }
    ],
    "Annotations": [],
    "X": 30.0,
    "Y": 262.902665121669,
    "Zoom": 1.52143684820394
  }
}