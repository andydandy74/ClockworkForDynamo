{
  "Uuid": "69d63a69-1abb-4e37-82d5-a858db67dfeb",
  "IsCustomNode": true,
  "Category": "Clockwork.Revit.Elements.Actions",
  "Description": "Moves a point-based element to the given location",
  "Name": "Element.MoveToPoint",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "element",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "9169595ce402425cbaf49c65b4e3b943",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d5e8076a11f49b2900401aa3e4f1a64",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "point",
        "TypeName": "Autodesk.DesignScript.Geometry.Point",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "67a978f12bab48cea84a5f4af8a94677",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9de3fffca894b9ea12b68c49b3ae7b0",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "element",
      "Id": "0c6a90a2fe0e497a9683ecf6b03b7993",
      "Inputs": [
        {
          "Id": "43f9205d506e425ea62eb681851e1cfd",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "success",
      "Id": "b5eb2737365e4d32bc8074eed4ca69f4",
      "Inputs": [
        {
          "Id": "b9d936a5b659403c9271b7e247b70408",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "3d366be32ab443f1ba1b79f0efe128a7",
      "Inputs": [
        {
          "Id": "83aa2790bfe241e08f56e92781b0707e",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dcb949db797447884f3f80a43826de7",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2325043731b24c45a64d31903e92f94e",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "4c019b9da644476fab5123ef94e2965e",
      "Inputs": [
        {
          "Id": "4deeef2e8f5d483fac82565373db6c5d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f09fbb3bfcda4951bac1a491eeff5b1d",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "b753fef933f4461293d64e75cb60f8eb",
      "Inputs": [
        {
          "Id": "6c448e6139794c6aa263810bbbb0f999",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8ce22002ab5432a92f72992b3e29c26",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "76cfc6ce556b492591dfeb0bb8893e6c",
      "Inputs": [
        {
          "Id": "32e80f58944548709976bfe1d029972b",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fa3c9f45f154fe08ae9d5b07e299860",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "797c2c75dc114595836f19f7a2a455d2",
          "Name": "passThrough",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.IsAlmostEqualTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "bafa7c22c715491d98e5fa64ea9acb70",
      "Inputs": [
        {
          "Id": "6f6647fce8524bbaad7298f302477a8d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecf57eb4f4cf4760a1cab9501a6ef07b",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d4667468b524a03b3c70849ba5a879f",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Check if the two objects have the same representational geometry or numerical values\n\nGeometry.IsAlmostEqualTo (other: Geometry): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitNodes', 'RevitServices')\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom RevitServices.Persistence import DocumentManager\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nelements = UnwrapElement(IN[0])\r\npoints = UnwrapElement(IN[1])\r\n\r\nif not hasattr(elements, \"__iter__\"):\r\n\telements = [element]\r\nif not hasattr(points, \"__iter__\"):\r\n\telements = [points]\r\n\t\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nOUT = []\r\nfor element, point in zip(elements, points):\r\n    try:\r\n    \tres = element.Location.Move(point.ToXyz(True))\r\n    \tOUT.append([element, res])\r\n    except: OUT.append([element, False])\r\nTransactionManager.Instance.TransactionTaskDone()",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d1ff0250c1774cbab36878cfdd319a46",
      "Inputs": [
        {
          "Id": "57dc4b91e29d4e37b846a6cb733eb6f3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0638e2074a62400cbe684c6d2ea5f49a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeb51ee5018249bbb0b3dd527f861a79",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "3d5e8076a11f49b2900401aa3e4f1a64",
      "End": "4deeef2e8f5d483fac82565373db6c5d",
      "Id": "33e8a5a2ca1643bdb9db549f4d3200f6"
    },
    {
      "Start": "3d5e8076a11f49b2900401aa3e4f1a64",
      "End": "32e80f58944548709976bfe1d029972b",
      "Id": "b34a7e41f3d548f18f5599fd226df12d"
    },
    {
      "Start": "3d5e8076a11f49b2900401aa3e4f1a64",
      "End": "57dc4b91e29d4e37b846a6cb733eb6f3",
      "Id": "cf31f16ede5e43139e4a9f5594bbfdb8"
    },
    {
      "Start": "e9de3fffca894b9ea12b68c49b3ae7b0",
      "End": "4dcb949db797447884f3f80a43826de7",
      "Id": "ada7f15c5175472da2c9246e09bd7f22"
    },
    {
      "Start": "e9de3fffca894b9ea12b68c49b3ae7b0",
      "End": "ecf57eb4f4cf4760a1cab9501a6ef07b",
      "Id": "a9a7d0995b2f40aaa79c47807b8a8905"
    },
    {
      "Start": "2325043731b24c45a64d31903e92f94e",
      "End": "0638e2074a62400cbe684c6d2ea5f49a",
      "Id": "cf5469e255924e008b667eed1011c10b"
    },
    {
      "Start": "f09fbb3bfcda4951bac1a491eeff5b1d",
      "End": "83aa2790bfe241e08f56e92781b0707e",
      "Id": "453f04b194134da1bb3a610800fa262f"
    },
    {
      "Start": "f8ce22002ab5432a92f72992b3e29c26",
      "End": "6f6647fce8524bbaad7298f302477a8d",
      "Id": "a3db754b91c949cc801f43425b0a6419"
    },
    {
      "Start": "797c2c75dc114595836f19f7a2a455d2",
      "End": "6c448e6139794c6aa263810bbbb0f999",
      "Id": "3624927fb51643cf8470894d4bf3ce1a"
    },
    {
      "Start": "797c2c75dc114595836f19f7a2a455d2",
      "End": "43f9205d506e425ea62eb681851e1cfd",
      "Id": "b15167f6c4c24b6a8f47f666161aebb7"
    },
    {
      "Start": "3d4667468b524a03b3c70849ba5a879f",
      "End": "b9d936a5b659403c9271b7e247b70408",
      "Id": "6afb1fbc89f64f2ea26d7598e30cc791"
    },
    {
      "Start": "eeb51ee5018249bbb0b3dd527f861a79",
      "End": "1fa3c9f45f154fe08ae9d5b07e299860",
      "Id": "59566b9650e04fed9948f3fd3f449465"
    }
  ],
  "Dependencies": [
    "ecce77dc-1290-438e-a056-970b256fd553"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.4.0",
      "ReferenceType": "Package",
      "Nodes": [
        "76cfc6ce556b492591dfeb0bb8893e6c"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "9169595ce402425cbaf49c65b4e3b943",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -338.81288850022008,
        "Y": 645.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "67a978f12bab48cea84a5f4af8a94677",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -60.812888500220083,
        "Y": 753.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "0c6a90a2fe0e497a9683ecf6b03b7993",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2064.18711149978,
        "Y": 588.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b5eb2737365e4d32bc8074eed4ca69f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2064.18711149978,
        "Y": 672.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ByTwoPoints",
        "Id": "3d366be32ab443f1ba1b79f0efe128a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 473.18711149977992,
        "Y": 682.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetLocation",
        "Id": "4c019b9da644476fab5123ef94e2965e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -60.812888500220083,
        "Y": 645.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetLocation",
        "Id": "b753fef933f4461293d64e75cb60f8eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1431.1871114997798,
        "Y": 672.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Passthrough",
        "Id": "76cfc6ce556b492591dfeb0bb8893e6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1054.1871114997798,
        "Y": 630.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry.IsAlmostEqualTo",
        "Id": "bafa7c22c715491d98e5fa64ea9acb70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1760.1871114997798,
        "Y": 672.17774882303
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: Element.MoveByVector",
        "Id": "d1ff0250c1774cbab36878cfdd319a46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 716.09013936180679,
        "Y": 718.2768849755862
      }
    ],
    "Annotations": [],
    "X": 72.837248160310878,
    "Y": -127.32354041704866,
    "Zoom": 0.72583335096494017
  }
}
