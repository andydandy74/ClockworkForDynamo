{
  "Uuid": "16311087-cf63-4f05-9057-6aa313487006",
  "IsCustomNode": true,
  "Category": "Clockwork.Math.Functions.Actions",
  "Description": "Returns the cardinal direction (N, E, S, W) for a given angle (where N = 0°, E = 90° etc.). The accuracy input has three modes: 0 = cardinal directions only, 1 = additional intercardinal directions (i.e. NE, SE, SW, NW), 2 = additional secondary intercardinal directions (NNE, ENE, ESE, SSE, SSW, WSW, WNW, NNW).",
  "Name": "CardinalDirectionFromAngle",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Based on https://gist.github.com/RobertSudwarts/acf8df23a16afdb5837f#gistcomment-3070256\r\n\r\ndirs = []\r\ndirs.append(['N', 'E', 'S', 'W'])\r\ndirs.append(['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'])\r\ndirs.append(['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'])\r\n\r\ndef GetCardinalDirection(angle):\r\n\tif angle:\r\n\t\tix = round(angle / (360. / len(cdirs)))\r\n\t\treturn cdirs[int(ix % len(cdirs))]\r\n\telif angle == 0: return 'N'\r\n\telse: return None\r\n\r\nif IN[1] not in (0, 1, 2): IN[1] = 0\r\ncdirs = dirs[IN[1]]\r\nif isinstance(IN[0], list): OUT = [GetCardinalDirection(x) for x in IN[0]]\r\nelse: OUT = GetCardinalDirection(IN[0])",
      "VariableInputPorts": true,
      "Id": "589f9095ef97482085d764679742021d",
      "Inputs": [
        {
          "Id": "fea811aa398f4a9eab1e183bb8d059bc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcaf55030fa349c68a6d581459f71139",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fa4cddeaa3a416eb378fb33060037fa",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "angle",
        "TypeName": "double",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "314a831c22e543faabfaad2f4316134f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e6ab6a96b6164c42b7b60d7767f18b01",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "accuracy",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "0",
        "Description": ""
      },
      "Id": "6adf4dfa28a74e4d86cb3ba188849d11",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a60c7a4ead854156937270039355535f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "str",
      "Id": "38cbfd8a229f4abd94702f922ae221ad",
      "Inputs": [
        {
          "Id": "fdf8f27a55d546aa9e5c4e65441fa5d9",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    }
  ],
  "Connectors": [
    {
      "Start": "0fa4cddeaa3a416eb378fb33060037fa",
      "End": "fdf8f27a55d546aa9e5c4e65441fa5d9",
      "Id": "a226f18cf8684788bdb2ffa17377dfc0"
    },
    {
      "Start": "e6ab6a96b6164c42b7b60d7767f18b01",
      "End": "fea811aa398f4a9eab1e183bb8d059bc",
      "Id": "c6515191f6e843f08cc8fe39f76031b8"
    },
    {
      "Start": "a60c7a4ead854156937270039355535f",
      "End": "bcaf55030fa349c68a6d581459f71139",
      "Id": "00c15d80d4fe4a7ba48d0ba44d2e6dd2"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.1.11775",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "589f9095ef97482085d764679742021d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 256.0,
        "Y": 62.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "314a831c22e543faabfaad2f4316134f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -31.0,
        "Y": 33.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "6adf4dfa28a74e4d86cb3ba188849d11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -31.0,
        "Y": 117.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "38cbfd8a229f4abd94702f922ae221ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 480.0,
        "Y": 62.0
      }
    ],
    "Annotations": [],
    "X": 239.0,
    "Y": 107.0,
    "Zoom": 1.0
  }
}