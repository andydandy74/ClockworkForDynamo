{
  "Uuid": "c19b9768-4da1-4591-bde5-73c07bbfbe6c",
  "IsCustomNode": true,
  "Category": "Clockwork.Revit.Selection.Collectors.Query",
  "Description": "Gets all placed elements of a given element class in the model. Unlike the OOTB node, it supports collecting from linked models and has a (optional) SchemaGUID filter.",
  "Name": "All Elements of Class+",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "elementType",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7051506d098749068b5b68f643bb6941",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b01a8a150d374ef68440268376541ebb",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "elements",
      "Id": "27647f3ac7d748fabf008adabac27375",
      "Inputs": [
        {
          "Id": "79bee0896b30452a8351f463dfb9eba5",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "toggle",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "true",
        "Description": ""
      },
      "Id": "86e66cba645b41a195de0dd4a0c548c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a485744308234d9380bd6bc4ae7764e8",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "docOrRevitLinkInstance",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": "null",
        "Description": " Use only if you want to query a linked model"
      },
      "Id": "5445afc61f3c4d71824825ab27252a13",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e128ab211b5748fb9421ca110cd9cd64",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import System\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndef ElementsByType(etype, doc, schemaGUID):\r\n\tesFilter = None\r\n\tif schemaGUID: esFilter = ExtensibleStorage.ExtensibleStorageFilter(schemaGUID)\r\n\t# Special cases where we need to pull FamilyInstances first and then check against the desired type\r\n\tif str(etype) in (\"Autodesk.Revit.DB.AnnotationSymbol\", \"Autodesk.Revit.DB.Mullion\", \"Autodesk.Revit.DB.Panel\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.FamilyInstance)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\t# Special cases where we need to pull FamilySymbols first and then check against the desired type\r\n\telif str(etype) in (\"Autodesk.Revit.DB.AnnotationSymbolType\", \"Autodesk.Revit.DB.AreaTagType\", \"Autodesk.Revit.DB.Architecture.RoomTagType\", \"Autodesk.Revit.DB.Mechanical.SpaceTagType\", \"Autodesk.Revit.DB.Structure.TrussType\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.FamilySymbol)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\t# Special cases where we need to pull SpatialElements first and then check against the desired type\r\n\telif str(etype) in (\"Autodesk.Revit.DB.Area\", \"Autodesk.Revit.DB.Architecture.Room\", \"Autodesk.Revit.DB.Mechanical.Space\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.SpatialElement)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\t# Special cases where we need to pull SpatialElementTags first and then check against the desired type\r\n\telif str(etype) in (\"Autodesk.Revit.DB.AreaTag\", \"Autodesk.Revit.DB.Architecture.RoomTag\", \"Autodesk.Revit.DB.Mechanical.SpaceTag\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.SpatialElementTag)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\t# Special cases where we need to pull CurveElements first and then check against the desired type\r\n\telif str(etype) in (\"Autodesk.Revit.DB.Structure.AreaReinforcementCurve\", \"Autodesk.Revit.DB.CurveByPoints\", \"Autodesk.Revit.DB.DetailArc\", \"Autodesk.Revit.DB.DetailCurve\", \"Autodesk.Revit.DB.DetailEllipse\", \"Autodesk.Revit.DB.DetailLine\", \"Autodesk.Revit.DB.DetailNurbSpline\", \"Autodesk.Revit.DB.ModelArc\", \"Autodesk.Revit.DB.ModelCurve\", \"Autodesk.Revit.DB.ModelEllipse\", \"Autodesk.Revit.DB.ModelHermiteSpline\", \"Autodesk.Revit.DB.ModelLine\", \"Autodesk.Revit.DB.ModelNurbSpline\", \"Autodesk.Revit.DB.SymbolicCurve\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.CurveElement)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\t# Special cases where we need to pull HostedSweep first and then check against the desired type\r\n\tif str(etype) in (\"Autodesk.Revit.DB.Architecture.Fascia\", \"Autodesk.Revit.DB.Architecture.Gutter\", \"Autodesk.Revit.DB.SlabEdge\"):\r\n\t\tcollector = FilteredElementCollector(doc).OfClass(Autodesk.Revit.DB.HostedSweep)\r\n\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\treturn [x for x in collector.ToElements() if x.GetType() == etype]\r\n\telse:\r\n\t\ttry:\r\n\t\t\tcollector = FilteredElementCollector(doc).OfClass(etype)\r\n\t\t\tif esFilter: collector = collector.WherePasses(esFilter)\r\n\t\t\treturn collector.ToElements()\r\n\t\texcept: return None\r\n\r\ninputdoc = UnwrapElement(IN[2])\r\nif not inputdoc: doc = DocumentManager.Instance.CurrentDBDocument\r\nelif inputdoc.GetType().ToString() == \"Autodesk.Revit.DB.RevitLinkInstance\": doc = inputdoc.GetLinkDocument()\r\nelif inputdoc.GetType().ToString() == \"Autodesk.Revit.DB.Document\": doc = inputdoc\r\nelse: doc = DocumentManager.Instance.CurrentDBDocument\r\nschemaGUID = IN[3]\r\n\r\nif isinstance(IN[0], list): OUT = [ElementsByType(x, doc, schemaGUID) for x in IN[0]]\r\nelse: OUT = ElementsByType(IN[0], doc, schemaGUID)",
      "VariableInputPorts": true,
      "Id": "6f90ee4b4ecc4eaa9b4511d83eec8b01",
      "Inputs": [
        {
          "Id": "7e6f283d5e424053a59100c7a02ad514",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc21ecd3152947a2906351c958fb4342",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc101be925f340a1b236ef264dbc3d6c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "895f02c9eb724b32aa3c176377df0cb3",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28f921d1908046219c646a71295854cf",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes IronPython-Skript aus."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "schemaGUID",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": "null",
        "Description": " Use only if you want to filter by a SchemaGUID"
      },
      "Id": "4532824d9cdf44f5a12f7f0c04e6011c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7663f50cbb504929a8ae1c0bc6f36436",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "b01a8a150d374ef68440268376541ebb",
      "End": "7e6f283d5e424053a59100c7a02ad514",
      "Id": "364dc77c796947048e62ff7e0ba49b3c"
    },
    {
      "Start": "a485744308234d9380bd6bc4ae7764e8",
      "End": "dc21ecd3152947a2906351c958fb4342",
      "Id": "56aabedd6ce24383839e695777309a0a"
    },
    {
      "Start": "e128ab211b5748fb9421ca110cd9cd64",
      "End": "cc101be925f340a1b236ef264dbc3d6c",
      "Id": "d6186c7a443f4b74bfdc04bffa1921e8"
    },
    {
      "Start": "28f921d1908046219c646a71295854cf",
      "End": "79bee0896b30452a8351f463dfb9eba5",
      "Id": "e9ec4fdebade4c269ae33a962da471b8"
    },
    {
      "Start": "7663f50cbb504929a8ae1c0bc6f36436",
      "End": "895f02c9eb724b32aa3c176377df0cb3",
      "Id": "de54f05241974ce08db7f24cfab0c170"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.4.12684",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Hintergrundvorschau",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7051506d098749068b5b68f643bb6941",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 171.369278068583,
        "Y": 61.0177681360315
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "27647f3ac7d748fabf008adabac27375",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 913.369278068583,
        "Y": 118.017768136031
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "86e66cba645b41a195de0dd4a0c548c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 171.369278068583,
        "Y": 144.017768136031
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5445afc61f3c4d71824825ab27252a13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 171.369278068583,
        "Y": 227.017768136032
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "6f90ee4b4ecc4eaa9b4511d83eec8b01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 689.369278068583,
        "Y": 118.017768136031
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "4532824d9cdf44f5a12f7f0c04e6011c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 172.64106589631444,
        "Y": 329.60335409273159
      }
    ],
    "Annotations": [],
    "X": 279.999203582438,
    "Y": 228.199941080411,
    "Zoom": 1.00501799482924
  }
}